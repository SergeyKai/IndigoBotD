from dataclasses import dataclass

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from .models import Direction


@dataclass
class MainKeyboardBtnTexts:
    DIRECTIONS: str = '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è üìÉ'
    ABOUT: str = '–û –Ω–∞—Å'
    SIGN_UP: str = '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìù'
    SUPPORT: str = '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öô'
    CANCEL: str = '–û—Ç–º–µ–Ω–∞ ‚ùå'
    MAIN_MENU: str = '‚¨Ö'

    OUR_SPECIALISTS = '–ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã ü§µ'
    OUR_LOCATIONS = '–ù–∞—à–∏ –ª–æ–∫–∞—Ü–∏–∏ üåè'
    OUR_CONTACTS = '–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã üìû'


main_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    keyboard=[
        [KeyboardButton(text=MainKeyboardBtnTexts.DIRECTIONS), KeyboardButton(text=MainKeyboardBtnTexts.SIGN_UP)],
        [KeyboardButton(text=MainKeyboardBtnTexts.ABOUT)],
        [KeyboardButton(text=MainKeyboardBtnTexts.SUPPORT)],
    ]
)

cancel_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    keyboard=[
        [KeyboardButton(text=MainKeyboardBtnTexts.CANCEL)],
    ]
)

about_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    keyboard=[
        [KeyboardButton(text=MainKeyboardBtnTexts.OUR_SPECIALISTS)],
        [KeyboardButton(text=MainKeyboardBtnTexts.OUR_LOCATIONS)],
        [KeyboardButton(text=MainKeyboardBtnTexts.OUR_CONTACTS)],
        [KeyboardButton(text=MainKeyboardBtnTexts.MAIN_MENU)],
    ]
)


async def specialist_keyboard(obj):
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ', url=obj.link_on_site))

    builder.adjust(1)

    return builder.as_markup()


async def location_keyboard(obj):
    builder = InlineKeyboardBuilder()

    builder.add(InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ', url=obj.on_map_link))
    builder.add(InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ', url=obj.on_site_link))

    builder.adjust(1)

    return builder.as_markup()


async def directions(callback_data_prefix: str = 'direction__') -> InlineKeyboardMarkup:
    """
    :param callback_data_prefix: –ø—Ä–∏—Å—Ç–∞–≤–∫–∞ –∫–æ–ª–±–µ–∫–∞
    :return: InlineKeyboardMarkup –ö–ª–∞–≤–∏–∞—Ç—Ä—É—Ä–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    """
    direction_objects = await Direction.objects.all_async()
    builder = InlineKeyboardBuilder()

    for obj in direction_objects:
        builder.add(
            InlineKeyboardButton(text=obj.title, callback_data=f'{callback_data_prefix}__{obj.id}')
        )

    builder.adjust(1)

    return builder.as_markup()


async def sign_up_keyboard(pk: int, callback_data_prefix: str = 'sign_up_direction__') -> InlineKeyboardMarkup:
    """
    :param callback_data_prefix: –ø—Ä–∏—Å—Ç–∞–≤–∫–∞ –∫–æ–ª–±–µ–∫–∞
    :param pk: ID –æ–±—ä–µ–∫—Ç–∞ –º–æ–¥–µ–ª–∏
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()

    builder.add(
        InlineKeyboardButton(text=MainKeyboardBtnTexts.SIGN_UP, callback_data=f'{callback_data_prefix}__{pk}')

    )

    return builder.as_markup()
